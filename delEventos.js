// üìå DELEGACI√ìN DE EVENTOS Y PREVENCI√ìN DE COMPORTAMIENTO PREDETERMINADO
// ‚ö° Como NO se deber√≠a hacer / Sin delegaci√≥n de eventos
// const itemsChild = document.querySelectorAll('li');
// console.log(itemsChild);
// itemsChild.forEach((item) => {
//     item.addEventListener('click', (e) => {
//         e.target.classList.toggle('highlight');
//         console.log(item);
//     });
// });
// üåü Como S√ç se deber√≠a hacer / con delegaci√≥n y con validaci√≥n
const listParent = document.querySelector('ul');
console.log(listParent);
// Se invoca al elemento declarado anteriormente 
listParent.addEventListener('click', (e) => {
    // La variable "listItems" ayuda a guardar el m√©todo closest()  
    const listItems = e.target.closest('li');
    // Validar si el elemento se activa para agregar el
    if (listItems) {
        listItems.classList.toggle('highlight');
        console.log(listItems);
    };
});
